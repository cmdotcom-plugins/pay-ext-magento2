<?xml version="1.0"?>
<!--
  ~ Copyright Â© CM.com. All rights reserved.
  ~ See LICENSE.txt for license details.
  -->

<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
    <preference for="CM\Payments\Client\Api\ApiClientInterface" type="CM\Payments\Client\ApiClient" />
    <preference for="CM\Payments\Client\Api\OrderInterface" type="CM\Payments\Client\Order" />
    <preference for="CM\Payments\Client\Api\PaymentInterface" type="CM\Payments\Client\Payment" />
    <preference for="CM\Payments\Client\Api\ShopperInterface" type="CM\Payments\Client\Shopper" />
    <preference for="CM\Payments\Api\Service\OrderServiceInterface" type="CM\Payments\Service\OrderService" />
    <preference for="CM\Payments\Api\Service\OrderTransactionServiceInterface"
                type="CM\Payments\Service\OrderTransactionService" />
    <preference for="CM\Payments\Api\Service\PaymentServiceInterface" type="CM\Payments\Service\PaymentService" />
    <preference for="CM\Payments\Api\Service\MethodServiceInterface" type="CM\Payments\Service\MethodService" />
    <preference for="CM\Payments\Api\Service\VersionServiceInterface" type="CM\Payments\Service\VersionService" />
    <preference for="CM\Payments\Api\Service\ApiTestServiceInterface" type="CM\Payments\Service\ApiTestService" />
    <preference for="CM\Payments\Api\Service\ShopperServiceInterface" type="CM\Payments\Service\ShopperService" />
    <preference for="CM\Payments\Api\Service\AddressServiceInterface" type="CM\Payments\Service\AddressService" />
    <preference for="CM\Payments\Api\Service\OrderRequestBuilderInterface"
                type="CM\Payments\Service\OrderRequestBuilder" />
    <preference for="CM\Payments\Api\Service\OrderItemsRequestBuilderInterface"
                type="CM\Payments\Service\OrderItemsRequestBuilder" />
    <preference for="CM\Payments\Api\Service\PaymentRequestBuilderInterface"
                type="CM\Payments\Service\PaymentRequestBuilder" />
    <preference for="CM\Payments\Api\Service\PaymentCaptureRequestBuilderInterface"
                type="CM\Payments\Service\PaymentCaptureRequestBuilder" />
    <preference for="CM\Payments\Api\Service\ShopperRequestBuilderInterface"
                type="CM\Payments\Service\ShopperRequestBuilder" />
    <preference for="CM\Payments\Api\Client\ApiClientInterface" type="CM\Payments\Client\ApiClient" />
    <preference for="CM\Payments\Api\Model\OrderRepositoryInterface" type="CM\Payments\Model\OrderRepository" />
    <preference for="CM\Payments\Api\Model\PaymentRepositoryInterface" type="CM\Payments\Model\PaymentRepository" />
    <preference for="CM\Payments\Api\Model\Data\OrderInterface" type="CM\Payments\Model\Data\Order"/>
    <preference for="CM\Payments\Api\Model\Data\PaymentInterface" type="CM\Payments\Model\Data\Payment"/>
    <preference for="CM\Payments\Api\Data\PaymentMethodAdditionalDataInterface"
                type="CM\Payments\Model\PaymentMethodAdditionalData"/>
    <preference for="CM\Payments\Api\Model\Domain\CMOrderInterface" type="CM\Payments\Model\Domain\CMOrder" />
    <preference for="CM\Payments\Api\Model\Domain\PaymentOrderStatusInterface" type="CM\Payments\Model\Domain\PaymentOrderStatus" />
    <preference for="CM\Payments\Api\Config\ConfigInterface" type="CM\Payments\Config\Config" />

    <preference for="CM\Payments\Api\GuestPaymentMethodManagementInterface"
                type="CM\Payments\Webapi\GuestPaymentMethodManagement" />
    <preference for="CM\Payments\Api\PaymentMethodManagementInterface"
                type="CM\Payments\Webapi\PaymentMethodManagement" />
    <preference for="CM\Payments\Api\OrderManagementInterface"
                type="CM\Payments\Webapi\OrderManagement" />
    <preference for="CM\Payments\Api\Service\Order\Item\AddOrderItemsAdjustmentServiceInterface"
                type="CM\Payments\Service\Order\Item\AddOrderItemsAdjustmentService" />

    <preference for="CM\Payments\Api\Data\CardDetailsInterface" type="CM\Payments\Model\Data\CardDetails"/>
    <preference for="CM\Payments\Api\Data\BrowserDetailsInterface" type="CM\Payments\Model\Data\BrowserDetails"/>

    <type name="CM\Payments\Service\PaymentRequestBuilder">
        <arguments>
            <argument name="parts" xsi:type="array">
                <item name="method" xsi:type="object">CM\Payments\Service\Payment\Request\Part\Method</item>
                <item name="elvDetails" xsi:type="object">CM\Payments\Service\Payment\Request\Part\ElvDetails</item>
                <item name="cardDetails" xsi:type="object">CM\Payments\Service\Payment\Request\Part\CardDetails</item>
            </argument>
        </arguments>
    </type>

    <type name="CM\Payments\Service\PaymentCaptureRequestBuilder">
        <arguments>
            <argument name="parts" xsi:type="array">
                <item name="amount" xsi:type="object">CM\Payments\Service\Payment\Capture\Request\Part\Amount</item>
                <item name="currency" xsi:type="object">CM\Payments\Service\Payment\Capture\Request\Part\Currency</item>
            </argument>
        </arguments>
    </type>

    <type name="CM\Payments\Service\OrderRequestBuilder">
        <arguments>
            <argument name="orderRequestParts" xsi:type="array">
                <item name="orderId" xsi:type="object">CM\Payments\Service\Order\Request\Part\OrderId</item>
                <item name="amount" xsi:type="object">CM\Payments\Service\Order\Request\Part\Amount</item>
                <item name="currency" xsi:type="object">CM\Payments\Service\Order\Request\Part\Currency</item>
                <item name="email" xsi:type="object">CM\Payments\Service\Order\Request\Part\Email</item>
                <item name="language" xsi:type="object">CM\Payments\Service\Order\Request\Part\Language</item>
                <item name="country" xsi:type="object">CM\Payments\Service\Order\Request\Part\Country</item>
                <item name="paymentProfile" xsi:type="object">CM\Payments\Service\Order\Request\Part\PaymentProfile</item>
                <item name="returnUrls" xsi:type="object">CM\Payments\Service\Order\Request\Part\ReturnUrls</item>
                <item name="expiry" xsi:type="object">CM\Payments\Service\Order\Request\Part\Expiry</item>
                <item name="billing_address_key" xsi:type="object">CM\Payments\Service\Order\Request\Part\BillingAddressKey</item>
            </argument>
            <argument name="quoteRequestParts" xsi:type="array">
                <item name="orderId" xsi:type="object">CM\Payments\Service\Quote\Request\Part\OrderId</item>
                <item name="amount" xsi:type="object">CM\Payments\Service\Quote\Request\Part\Amount</item>
                <item name="currency" xsi:type="object">CM\Payments\Service\Quote\Request\Part\Currency</item>
                <item name="email" xsi:type="object">CM\Payments\Service\Quote\Request\Part\Email</item>
                <item name="language" xsi:type="object">CM\Payments\Service\Quote\Request\Part\Language</item>
                <item name="country" xsi:type="object">CM\Payments\Service\Quote\Request\Part\Country</item>
                <item name="paymentProfile" xsi:type="object">CM\Payments\Service\Quote\Request\Part\PaymentProfile</item>
                <item name="returnUrls" xsi:type="object">CM\Payments\Service\Quote\Request\Part\ReturnUrls</item>
                <item name="expiry" xsi:type="object">CM\Payments\Service\Quote\Request\Part\Expiry</item>
                <item name="billing_address_key" xsi:type="object">CM\Payments\Service\Quote\Request\Part\BillingAddressKey</item>
            </argument>
        </arguments>
    </type>

    <type name="CM\Payments\Service\OrderItemsRequestBuilder">
        <arguments>
            <argument name="orderItemRequestParts" xsi:type="array">
                <item name="itemId" xsi:type="object">CM\Payments\Service\Order\Item\Request\Part\ItemId</item>
                <item name="sku" xsi:type="object">CM\Payments\Service\Order\Item\Request\Part\Sku</item>
                <item name="name" xsi:type="object">CM\Payments\Service\Order\Item\Request\Part\Name</item>
                <item name="description" xsi:type="object">CM\Payments\Service\Order\Item\Request\Part\Description</item>
                <item name="type" xsi:type="object">CM\Payments\Service\Order\Item\Request\Part\Type</item>
                <item name="quantity" xsi:type="object">CM\Payments\Service\Order\Item\Request\Part\Quantity</item>
                <item name="currency" xsi:type="object">CM\Payments\Service\Order\Item\Request\Part\Currency</item>
                <item name="amount" xsi:type="object">CM\Payments\Service\Order\Item\Request\Part\Amount</item>
                <item name="unitAmount" xsi:type="object">CM\Payments\Service\Order\Item\Request\Part\UnitAmount</item>
                <item name="vat_rate" xsi:type="object">CM\Payments\Service\Order\Item\Request\Part\VatRate</item>
                <item name="vat_amount" xsi:type="object">CM\Payments\Service\Order\Item\Request\Part\VatAmount</item>
            </argument>
            <argument name="quoteItemRequestParts" xsi:type="array">
                <item name="itemId" xsi:type="object">CM\Payments\Service\Quote\Item\Request\Part\ItemId</item>
                <item name="sku" xsi:type="object">CM\Payments\Service\Quote\Item\Request\Part\Sku</item>
                <item name="name" xsi:type="object">CM\Payments\Service\Quote\Item\Request\Part\Name</item>
                <item name="description" xsi:type="object">CM\Payments\Service\Quote\Item\Request\Part\Description</item>
                <item name="type" xsi:type="object">CM\Payments\Service\Quote\Item\Request\Part\Type</item>
                <item name="quantity" xsi:type="object">CM\Payments\Service\Quote\Item\Request\Part\Quantity</item>
                <item name="currency" xsi:type="object">CM\Payments\Service\Quote\Item\Request\Part\Currency</item>
                <item name="amount" xsi:type="object">CM\Payments\Service\Quote\Item\Request\Part\Amount</item>
                <item name="unitAmount" xsi:type="object">CM\Payments\Service\Quote\Item\Request\Part\UnitAmount</item>
                <item name="vat_rate" xsi:type="object">CM\Payments\Service\Quote\Item\Request\Part\VatRate</item>
                <item name="vat_amount" xsi:type="object">CM\Payments\Service\Quote\Item\Request\Part\VatAmount</item>
            </argument>
        </arguments>
    </type>

    <type name="CM\Payments\Observer\AdditionalDataAssignObserver">
        <arguments>
            <argument name="additionalInformationList" xsi:type="array">
                <item name="iban" xsi:type="string">iban</item>
                <item name="dob" xsi:type="string">dob</item>
            </argument>
        </arguments>
    </type>

    <type name="CM\Payments\Service\ShopperRequestBuilder">
        <arguments>
            <argument name="orderAddressRequestParts" xsi:type="array">
                <item name="shopperId" xsi:type="object">CM\Payments\Service\Order\Address\Request\Part\ShopperId</item>
                <item name="name" xsi:type="object">CM\Payments\Service\Order\Address\Request\Part\Name</item>
                <item name="address" xsi:type="object">CM\Payments\Service\Order\Address\Request\Part\Address</item>
                <item name="email" xsi:type="object">CM\Payments\Service\Order\Address\Request\Part\Email</item>
                <item name="gender" xsi:type="object">CM\Payments\Service\Order\Address\Request\Part\Gender</item>
                <item name="dateOfBirth" xsi:type="object">CM\Payments\Service\Order\Address\Request\Part\DateOfBirth</item>
                <item name="phoneNumber" xsi:type="object">CM\Payments\Service\Order\Address\Request\Part\PhoneNumber</item>
            </argument>
            <argument name="quoteAddressRequestParts" xsi:type="array">
                <item name="shopperId" xsi:type="object">CM\Payments\Service\Quote\Address\Request\Part\ShopperId</item>
                <item name="name" xsi:type="object">CM\Payments\Service\Quote\Address\Request\Part\Name</item>
                <item name="address" xsi:type="object">CM\Payments\Service\Quote\Address\Request\Part\Address</item>
                <item name="email" xsi:type="object">CM\Payments\Service\Quote\Address\Request\Part\Email</item>
                <item name="gender" xsi:type="object">CM\Payments\Service\Quote\Address\Request\Part\Gender</item>
                <item name="dateOfBirth" xsi:type="object">CM\Payments\Service\Quote\Address\Request\Part\DateOfBirth</item>
                <item name="phoneNumber" xsi:type="object">CM\Payments\Service\Quote\Address\Request\Part\PhoneNumber</item>
            </argument>
        </arguments>
    </type>

    <!-- BEGIN CM Payments Method -->
    <virtualType name="CMPaymentsFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">CM\Payments\Model\ConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\Info</argument>
            <argument name="valueHandlerPool" xsi:type="object">CMValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">CMValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">CMCommandPool</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">CMConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">CMGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMGenericConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">CM\Payments\Model\ConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">CMCountryValidator</item>
                <item name="currency" xsi:type="string">CMCurrencyValidator</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">CMGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMCurrencyValidator" type="CM\Payments\Gateway\Validator\CurrencyValidator">
        <arguments>
            <argument name="config" xsi:type="object">CMGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">CMInitializeCommand</item>
                <item name="refund" xsi:type="string">CMRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">CMInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">CM\Payments\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">CM\Payments\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- CM Refund command -->
    <virtualType name="CMRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">CMRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">CM\Payments\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">CM\Payments\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">CM\Payments\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">CM\Payments\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- CM Refund Request -->
    <virtualType name="CMRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">CM\Payments\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END CM Payments Method -->

    <!-- BEGIN CM Payments (Credit Card) Method -->
    <virtualType name="CMPaymentsCreditCardFacade" type="CMPaymentsFacade">
        <arguments>
            <argument name="code" xsi:type="const">CM\Payments\Model\ConfigProvider::CODE_CREDIT_CARD</argument>
            <argument name="valueHandlerPool" xsi:type="object">CMCreditCardValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">CMCreditCardValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">CMCreditCardCommandPool</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMCreditCardValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">CMCreditCardConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMCreditCardValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">CMCreditCardCountryValidator</item>
                <item name="currency" xsi:type="string">CMCreditCardCurrencyValidator</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMCreditCardCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">CMInitializeCommand</item>
                <item name="refund" xsi:type="string">CMRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMCreditCardGenericConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">CM\Payments\Model\ConfigProvider::CODE_CREDIT_CARD</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMCreditCardConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">CMCreditCardGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMCreditCardCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">CMCreditCardGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMCreditCardCurrencyValidator" type="CM\Payments\Gateway\Validator\CurrencyValidator">
        <arguments>
            <argument name="config" xsi:type="object">CMCreditCardGenericConfig</argument>
        </arguments>
    </virtualType>
    <!-- END CM Payments (Credit Card) Method -->

    <!-- BEGIN CM Payments (Maestro) Method -->
    <virtualType name="CMPaymentsMaestroFacade" type="CMPaymentsFacade">
        <arguments>
            <argument name="code" xsi:type="const">CM\Payments\Model\ConfigProvider::CODE_MAESTRO</argument>
            <argument name="valueHandlerPool" xsi:type="object">CMMaestroValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">CMMaestroValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">CMMaestroCommandPool</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMMaestroValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">CMMaestroConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMMaestroValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">CMMaestroCountryValidator</item>
                <item name="currency" xsi:type="string">CMMaestroCurrencyValidator</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMMaestroCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">CMInitializeCommand</item>
                <item name="refund" xsi:type="string">CMRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMMaestroGenericConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">CM\Payments\Model\ConfigProvider::CODE_MAESTRO</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMMaestroConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">CMMaestroGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMMaestroCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">CMMaestroGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMMaestroCurrencyValidator" type="CM\Payments\Gateway\Validator\CurrencyValidator">
        <arguments>
            <argument name="config" xsi:type="object">CMMaestroGenericConfig</argument>
        </arguments>
    </virtualType>
    <!-- END CM Payments (Maestro) Method -->

    <!-- BEGIN CM Payments (V-Pay) Method -->
    <virtualType name="CMPaymentsVPayFacade" type="CMPaymentsFacade">
        <arguments>
            <argument name="code" xsi:type="const">CM\Payments\Model\ConfigProvider::CODE_VPAY</argument>
            <argument name="valueHandlerPool" xsi:type="object">CMVPayValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">CMVPayValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">CMVPayCommandPool</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMVPayValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">CMVPayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMVPayValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">CMVPayCountryValidator</item>
                <item name="currency" xsi:type="string">CMVPayCurrencyValidator</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMVPayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">CMInitializeCommand</item>
                <item name="refund" xsi:type="string">CMRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMVPayGenericConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">CM\Payments\Model\ConfigProvider::CODE_VPAY</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMVPayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">CMVPayGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMVPayCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">CMVPayGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMVPayCurrencyValidator" type="CM\Payments\Gateway\Validator\CurrencyValidator">
        <arguments>
            <argument name="config" xsi:type="object">CMVPayGenericConfig</argument>
        </arguments>
    </virtualType>
    <!-- END CM Payments (V-Pay) Method -->

    <!-- BEGIN CM Payments (iDeal) Method -->
    <virtualType name="CMPaymentsIdealFacade" type="CMPaymentsFacade">
        <arguments>
            <argument name="code" xsi:type="const">CM\Payments\Model\ConfigProvider::CODE_IDEAL</argument>
            <argument name="valueHandlerPool" xsi:type="object">CMIdealValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">CMIdealValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">CMIdealCommandPool</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMIdealCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">CMInitializeCommand</item>
                <item name="refund" xsi:type="string">CMRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMIdealValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">CMIdealConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMIdealConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">CMIdealGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMIdealGenericConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">CM\Payments\Model\ConfigProvider::CODE_IDEAL</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMIdealValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">CMIdealCountryValidator</item>
                <item name="currency" xsi:type="string">CMCIdealCurrencyValidator</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMIdealCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">CMIdealGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMCIdealCurrencyValidator" type="CM\Payments\Gateway\Validator\CurrencyValidator">
        <arguments>
            <argument name="config" xsi:type="object">CMIdealGenericConfig</argument>
        </arguments>
    </virtualType>
    <!-- END CM Payments (iDeal) Method -->

    <!-- BEGIN CM Payments (PayPal) Method -->
    <virtualType name="CMPaymentsPaypalFacade" type="CMPaymentsFacade">
        <arguments>
            <argument name="code" xsi:type="const">CM\Payments\Model\ConfigProvider::CODE_PAYPAL</argument>
            <argument name="valueHandlerPool" xsi:type="object">CMPaypalValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">CMPaypalValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">CMPaypalCommandPool</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMPaypalCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">CMInitializeCommand</item>
                <item name="refund" xsi:type="string">CMRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMPaypalValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">CMPaypalConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMPaypalConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">CMPaypalGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMPaypalGenericConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">CM\Payments\Model\ConfigProvider::CODE_PAYPAL</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMPaypalValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">CMPaypalCountryValidator</item>
                <item name="currency" xsi:type="string">CMPaypalCurrencyValidator</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMPaypalCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">CMPaypalGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMPaypalCurrencyValidator" type="CM\Payments\Gateway\Validator\CurrencyValidator">
        <arguments>
            <argument name="config" xsi:type="object">CMPaypalGenericConfig</argument>
        </arguments>
    </virtualType>
    <!-- END CM Payments (PayPal) Method -->

    <!-- BEGIN CM Payments (BanContact) Method -->
    <virtualType name="CMPaymentsBanContactFacade" type="CMPaymentsFacade">
        <arguments>
            <argument name="code" xsi:type="const">CM\Payments\Model\ConfigProvider::CODE_BANCONTACT</argument>
            <argument name="valueHandlerPool" xsi:type="object">CMBanContactValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">CMBanContactValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">CMBanContactCommandPool</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMBanContactCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">CMInitializeCommand</item>
                <item name="refund" xsi:type="string">CMRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMBanContactValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">CMBanContactConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMBanContactConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">CMBanContactGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMBanContactGenericConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">CM\Payments\Model\ConfigProvider::CODE_BANCONTACT</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMBanContactValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">CMBanContactCountryValidator</item>
                <item name="currency" xsi:type="string">CMBanContactCurrencyValidator</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMBanContactCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">CMBanContactGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMBanContactCurrencyValidator" type="CM\Payments\Gateway\Validator\CurrencyValidator">
        <arguments>
            <argument name="config" xsi:type="object">CMBanContactGenericConfig</argument>
        </arguments>
    </virtualType>
    <!-- END CM Payments (BanContact) Method -->

    <!-- BEGIN CM Payments (Belfius) Method -->
    <virtualType name="CMPaymentsBelfiusFacade" type="CMPaymentsFacade">
        <arguments>
            <argument name="code" xsi:type="const">CM\Payments\Model\ConfigProvider::CODE_BELFIUS</argument>
            <argument name="valueHandlerPool" xsi:type="object">CMBelfiusValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">CMBelfiusValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">CMBelfiusCommandPool</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMBelfiusValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">CMBelfiusConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMBelfiusConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">CMBelfiusGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMBelfiusValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">CMBelfiusCountryValidator</item>
                <item name="currency" xsi:type="string">CMBelfiusCurrencyValidator</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMBelfiusCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">CMBelfiusGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMBelfiusCurrencyValidator" type="CM\Payments\Gateway\Validator\CurrencyValidator">
        <arguments>
            <argument name="config" xsi:type="object">CMBelfiusGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMBelfiusCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">CMInitializeCommand</item>
                <item name="refund" xsi:type="string">CMRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMBelfiusGenericConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">CM\Payments\Model\ConfigProvider::CODE_BELFIUS</argument>
        </arguments>
    </virtualType>
    <!-- END CM Payments (Belfius) Method -->

    <!-- BEGIN CM Payments (KBC) Method -->
    <virtualType name="CMPaymentsKbcFacade" type="CMPaymentsFacade">
        <arguments>
            <argument name="code" xsi:type="const">CM\Payments\Model\ConfigProvider::CODE_KBC</argument>
            <argument name="valueHandlerPool" xsi:type="object">CMKbcValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">CMKbcValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">CMKbcCommandPool</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMKbcValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">CMKbcConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMKbcConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">CMKbcGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMKbcValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">CMKbcCountryValidator</item>
                <item name="currency" xsi:type="string">CMKbcCurrencyValidator</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMKbcCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">CMKbcGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMKbcCurrencyValidator" type="CM\Payments\Gateway\Validator\CurrencyValidator">
        <arguments>
            <argument name="config" xsi:type="object">CMKbcGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMKbcCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">CMInitializeCommand</item>
                <item name="refund" xsi:type="string">CMRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMKbcGenericConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">CM\Payments\Model\ConfigProvider::CODE_KBC</argument>
        </arguments>
    </virtualType>
    <!-- END CM Payments (KBC) Method -->

    <!-- BEGIN CM Payments (CBC) Method -->
    <virtualType name="CMPaymentsCbcFacade" type="CMPaymentsFacade">
        <arguments>
            <argument name="code" xsi:type="const">CM\Payments\Model\ConfigProvider::CODE_CBC</argument>
            <argument name="valueHandlerPool" xsi:type="object">CMCbcValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">CMCbcValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">CMCbcCommandPool</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMCbcValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">CMCbcConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMCbcConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">CMCbcGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMCbcValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">CMCbcCountryValidator</item>
                <item name="currency" xsi:type="string">CMCbcCurrencyValidator</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMCbcCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">CMCbcGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMCbcCurrencyValidator" type="CM\Payments\Gateway\Validator\CurrencyValidator">
        <arguments>
            <argument name="config" xsi:type="object">CMCbcGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMCbcCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">CMInitializeCommand</item>
                <item name="refund" xsi:type="string">CMRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMCbcGenericConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">CM\Payments\Model\ConfigProvider::CODE_CBC</argument>
        </arguments>
    </virtualType>
    <!-- END CM Payments (CBC) Method -->

    <!-- BEGIN CM Payments (ELV) Method -->
    <virtualType name="CMPaymentsElvFacade" type="CMPaymentsFacade">
        <arguments>
            <argument name="code" xsi:type="const">CM\Payments\Model\ConfigProvider::CODE_ELV</argument>
            <argument name="valueHandlerPool" xsi:type="object">CMElvValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">CMElvValidatorPool</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMElvValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">CMElvConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMElvConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">CMElvGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMElvGenericConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">CM\Payments\Model\ConfigProvider::CODE_ELV</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMElvValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">CMElvCountryValidator</item>
                <item name="currency" xsi:type="string">CMElvCurrencyValidator</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMElvCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">CMElvGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMElvCurrencyValidator" type="CM\Payments\Gateway\Validator\CurrencyValidator">
        <arguments>
            <argument name="config" xsi:type="object">CMElvGenericConfig</argument>
        </arguments>
    </virtualType>
    <!-- END CM Payments (ELV) Method -->

    <!-- BEGIN CM Payments (Klarna) Method -->
    <virtualType name="CMPaymentsKlarnaFacade" type="CMPaymentsFacade">
        <arguments>
            <argument name="code" xsi:type="const">CM\Payments\Model\ConfigProvider::CODE_KLARNA</argument>
            <argument name="valueHandlerPool" xsi:type="object">CMKlarnaValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">CMKlarnaValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">CMKlarnaCommandPool</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMKlarnaCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">CMInitializeCommand</item>
                <item name="refund" xsi:type="string">CMRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMKlarnaValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">CMKlarnaConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMKlarnaConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">CMKlarnaGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMKlarnaGenericConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">CM\Payments\Model\ConfigProvider::CODE_KLARNA</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMKlarnaValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">CMKlarnaCountryValidator</item>
                <item name="currency" xsi:type="string">CMKlarnaCurrencyValidator</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMKlarnaCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">CMKlarnaGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMKlarnaCurrencyValidator" type="CM\Payments\Gateway\Validator\CurrencyValidator">
        <arguments>
            <argument name="config" xsi:type="object">CMKlarnaGenericConfig</argument>
        </arguments>
    </virtualType>
    <!-- END CM Payments (Klarna) Method -->

    <!-- BEGIN CM Payments (AfterPay) Method -->
    <virtualType name="CMPaymentsAfterPayFacade" type="CMPaymentsFacade">
        <arguments>
            <argument name="code" xsi:type="const">CM\Payments\Model\ConfigProvider::CODE_AFTERPAY</argument>
            <argument name="valueHandlerPool" xsi:type="object">CMAfterPayValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">CMAfterPayValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">CMAfterPayCommandPool</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMAfterPayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">CMInitializeCommand</item>
                <item name="refund" xsi:type="string">CMRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMAfterPayValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">CMAfterPayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMAfterPayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">CMAfterPayGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMAfterPayGenericConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">CM\Payments\Model\ConfigProvider::CODE_AFTERPAY</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMAfterPayValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">CMAfterPayCountryValidator</item>
                <item name="currency" xsi:type="string">CMAfterPayCurrencyValidator</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMAfterPayCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">CMAfterPayGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMAfterPayCurrencyValidator" type="CM\Payments\Gateway\Validator\CurrencyValidator">
        <arguments>
            <argument name="config" xsi:type="object">CMAfterPayGenericConfig</argument>
        </arguments>
    </virtualType>
    <!-- END CM Payments (AfterPay) Method -->

    <!-- BEGIN CM Payments (ApplePay) Method -->
    <virtualType name="CMPaymentsApplePayFacade" type="CMPaymentsFacade">
        <arguments>
            <argument name="code" xsi:type="const">CM\Payments\Model\ConfigProvider::CODE_APPLEPAY</argument>
            <argument name="valueHandlerPool" xsi:type="object">CMApplePayValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">CMApplePayValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">CMApplePayCommandPool</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMApplePayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">CMInitializeCommand</item>
                <item name="refund" xsi:type="string">CMRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMApplePayValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">CMApplePayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMApplePayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">CMApplePayGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMApplePayGenericConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">CM\Payments\Model\ConfigProvider::CODE_APPLEPAY</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMApplePayValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">CMApplePayCountryValidator</item>
                <item name="currency" xsi:type="string">CMApplePayCurrencyValidator</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMApplePayCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">CMApplePayGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMApplePayCurrencyValidator" type="CM\Payments\Gateway\Validator\CurrencyValidator">
        <arguments>
            <argument name="config" xsi:type="object">CMApplePayGenericConfig</argument>
        </arguments>
    </virtualType>
    <!-- END CM Payments (ApplePay) Method -->

    <!-- BEGIN CM Payments (GiftCard) Method -->
    <virtualType name="CMPaymentsGiftCardFacade" type="CMPaymentsFacade">
        <arguments>
            <argument name="code" xsi:type="const">CM\Payments\Model\ConfigProvider::CODE_GIFTCARD</argument>
            <argument name="valueHandlerPool" xsi:type="object">CMGiftCardValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">CMGiftCardValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">CMGiftCardCommandPool</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMGiftCardCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">CMInitializeCommand</item>
                <item name="refund" xsi:type="string">CMRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMGiftCardValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">CMGiftCardConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMGiftCardConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">CMGiftCardGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMGiftCardGenericConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">CM\Payments\Model\ConfigProvider::CODE_GIFTCARD</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMGiftCardValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">CMGiftCardCountryValidator</item>
                <item name="currency" xsi:type="string">CMGiftCardCurrencyValidator</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CMGiftCardCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">CMGiftCardGenericConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="CMGiftCardCurrencyValidator" type="CM\Payments\Gateway\Validator\CurrencyValidator">
        <arguments>
            <argument name="config" xsi:type="object">CMGiftCardGenericConfig</argument>
        </arguments>
    </virtualType>
    <!-- END CM Payments (GiftCard) Method -->

    <!-- BEGIN CM Payments (Logger) -->
    <type name="CM\Payments\Logger\Handler">
        <arguments>
            <argument name="filesystem" xsi:type="object">Magento\Framework\Filesystem\Driver\File</argument>
        </arguments>
    </type>

    <type name="CM\Payments\Logger\CMPaymentsLogger">
        <arguments>
            <argument name="name" xsi:type="string">cm_payments_logger</argument>
            <argument name="handlers" xsi:type="array">
                <item name="system" xsi:type="object">CM\Payments\Logger\Handler</item>
            </argument>
        </arguments>
    </type>
    <!-- END CM Payments (Logger) -->

    <type name="Magento\Quote\Api\PaymentMethodManagementInterface">
        <plugin name="cm_payments_quote_api_payment_methods_compare_methods"
                type="CM\Payments\Plugin\Quote\PaymentMethodManagementPlugin" sortOrder="100" />
    </type>

</config>
